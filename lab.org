#+Title: Laboratórios de Micro controladores
#+Author: Lucas Valandro da Rocha
#+Email: lucas.valandrorocha@inf.ufrgs.br
#+Language: pt

* LAB01 (2020-06-01 / 2020-06-04)
** Setup do cartão microSD
*** Download da imagem
       
    https://downloadmirror.intel.com/26418/eng/Galileo_Poky_SW_image_20160606.zip

*** Descompactando arquivo no cartão microsd
  *MAC OSX*
    
   diskutil list
    
   -  Ache o seu cartão sd, no meu caso, */dev/disk2*

   - Instale o pacote coreutils através do HomeBrew

   brew install coreutils

   - Execute o seguinte comando

   unzip -p Galileo...zip | sudo gdd of=/dev/disk2 bs=3m conv=fsync status=progress

   - Após a instalação, basta inserir o cartão na Galileo

   OBS.: Caso receba uma mensagem estilo "Resource busy", você deve
   então:

   diskutil unmountDisk force /dev/disk2

*** Boot da Galileo
    
   Após inserir o cartão SD e conectar sua placa no seu roteador,
   então é necessário encontrar sua Galileo na rede local.

   Para encontrar a Galileo na sua rede, você pode utilizar os seguintes comandos:

   - Visualização da tabela ARP e procura do MAC addr da Galileo
      
   arp -a

   - Procura pelo IP na rede

   Instale o pacote ip via HomeBrew

   brew install iproute2mac

   Após instalação, basta:
   
   ip neighbor


*** Configuração de acesso rápido
  
  Após descobrir o IP da galileo em sua rede, é uma boa prática
  configurar acesso via ssh de maneira rápida, para isso:

  - Utilize o comando para gerar (caso não possua) uma chave pública

  ssh-keygen 

  - Copie essa chave para dentro da Galileo com o comando

  scp ~/.ssh/id_rsa.pub root@<galileo-ip>

  - Acesse a Galileo e guarde essa chave no local adequado

  mkdir .ssh
  
  cat id_ras.pub >> .ssh/authorized_keys

  - Feito, basta sair com o comando *exit*

* LAB02 (2020-06-06)
** Configuração do ambiente de desenvolvimento
*** Download do Intel System Studio IoT Edition

  http://www.ece.ufrgs.br/~fetter/eng10032/iss-iot-linux_03-24-16.tar.bz2
